package org.olddriver.learnjava.oo;

/**
 * 20204028
 * 继承 概念
 * 第三部分
 */
public class Inheritance {
    /**
     * 继承(Inheritance)
	 * 在现有类的基础上派生出新类，是复用代码的一种方式
	 * 子类继承父类，子类中可以直接访问继承的成员，不需在子类中重新声明父类成员
     * 父类中一些成员子类不会继承，但子类对象会拥有这些成员
     * 派生类称为子类，派生子类的类称为父类
     *
	 * 类层次结构
	 * Object类是所有类的父类，定义类的通用行为；声明类时若不显式指明父类，默认继承Object类
	 * java中类支持类单继承，不支持类多继承，避免出现多个父类中成员冲突
     * java接口支持多继承
     *
     * 对象转型
     * 通过父类类型引用指向子类对象称为向上转型，隐式转型。代码中体现为子类对象地址或引用赋值给父类类型引用
     * 向上转型后，通过父类类型引用，可以调用父类中所有成员(包括父类中的private成员)，但不能调用子类中的特有成员
     * 经过向上转型的子类对象再次使用子类类型引用指向称为向下转型，显式转型。代码中体现父类类型引用转型后赋值给子类类型引用
     * 向下转型前可以使用instanceof进行类型判断，避免RuntimeException
     * 向下转型后，通过子类类型引用可以调用子类中所有成员
     */
}
