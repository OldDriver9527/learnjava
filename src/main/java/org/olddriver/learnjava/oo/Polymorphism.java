package org.olddriver.learnjava.oo;

/**
 * 20204028
 * part 8
 */
public class Polymorphism {
    /*
     * 多态(Polymorphism)
     * 多态指子类中既能定义特有行为，又能继承父类行为
     * 多态体现
     * 将子类对象地址赋值给父类或接口类型引用
     * 字段多态
     * 子类对象向上转型后，通过子类对象调用字段，调用父类中继承的字段
     * 方法绑定
     * 将方法调用与方法体关联称为方法绑定，方法绑定分为静态绑定，动态绑定
     * 静态绑定在编译时期将方法调用与方法体关联，动态绑定在运行时期将方法调用与方法体关联
     * 方法多态
     * 子类对象向上转型后，通过子类对象调用static，final方法，调用父类继承的方法
     * 此类方法属于静态绑定，编译器在编译时期不会判断对象实际类型，将方法调用与继承自父类方法体绑定
     * 调用非static，非final方法，调用子类中方法
     * 此类方法属于动态绑定，编译器在编译时期不会判断对象实际类型，仅会检查方法参数及返回值类型；在运行时，
     * 编译器会判断对象实际类型建立方法调用与真正方法体的关联
     */
}
