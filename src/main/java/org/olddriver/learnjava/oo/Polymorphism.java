package org.olddriver.learnjava.oo;

/**
 * 20204028
 * part 8
 */
public class Polymorphism{
    /*
     * 多态(Polymorphism)
     * 多态指子类对象向上转型后，调用父类或父接口中动态绑定方法，允许存在不同实现
     * 字段不具备多态性
     *
     * 方法绑定
     * 将方法调用与方法体关联称为方法绑定，方法绑定分为静态绑定，动态绑定
     * 静态绑定在编译时期根据对象类型，将方法调用与方法体关联。动态绑定在运行时期，根据对象实际类型将方法调用与方法体关联
     * 类中static，private，final方法为静态绑定，其余方法为动态绑定
     *
     * 方法多态
     * 子类对象向上转型后，调用父类中动态绑定方法，
     * 编译器在编译时期不会判断对象实际类型，根据父类中方法声明检查方法参数及返回值类型；
     * 在运行时，编译器会根据对象实际类型建立方法调用与真正方法体的关联
     *
     * 多态缺陷
     * 子类对象向上转型后，通过对象调用字段，调用父类中字段
     * 通过对象调用static，private，final方法，调用父类中方法
     */
}
