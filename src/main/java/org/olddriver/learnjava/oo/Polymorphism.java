package org.olddriver.learnjava.oo;

/**
 * 20204028
 * 多态 概念
 * 第四部分
 */
public class Polymorphism{
    /**
     * 多态(Polymorphism)
     * 在继承的前提下，子父类中相同行为可以有不同结果
     *
     * 绑定
     * 将调用请求与类成员关联称为绑定，绑定分为静态绑定，动态绑定
     * 静态绑定在编译时期根据引用类型，将调用请求与类成员关联。类中域，static，private，final方法使用静态绑定
     * 动态绑定在运行时期，根据对象实际类型将调用请求与类成员关联。类中非static，private，final方法使用动态绑定
     * 调用对象中动态绑定方法，返回值类型取决于对象引用类型中的方法声明
     *
     * 多态实现方式
     * java中多态通过动态绑定实现。子类对象向上转型后，调用父类中动态绑定方法，
     * 在编译时期不会判断对象实际类型，根据对象引用类型中方法声明检查方法参数及返回值类型；
     * 在运行时，根据对象实际类型建立方法调用与类成员的关联
     */
}
