package org.olddriver.learnsecurity;

/**
 * http over ssl
 * 20210908
 * 第五部分
 */
public class Https {
    /**
     * http协议的报文在互连网传输过程中，可能在中间节点被修改或响应被中间节点伪造
     * https对传输内容进行加密，防止被中间节点篡改
     *
     * 对称加密
     * 通信双方加解密时使用相同密钥
     * 非对称加密
     * 通信双方加解密时使用不同密钥
     *
     * 数据包中报文使用非对称加密，中间节点获取公钥后就可以偷窥响应。使用对称加密，只要密钥不泄露中间节点就无法偷窥
     * 对称加密密钥由客户端，服务端产生的随机数共同决定
     * 为保证对称加密密钥不泄露，客户端向服务端发送随机数过程中使用非对称加密的公钥加密。
     * 客户端申请公钥过程中无法判断公钥真伪，公钥可能在下发过程中被篡改，因此使用ca机构的私钥加密服务端公钥生成证书下发客户端
     * 客户端使用操作系统中内嵌的ca公钥解密证书，获取服务端公钥，使用公钥加密对称随机数
     *
     * https四次握手
     * 客户端请求服务端，告知支持的对称加密算法
     * 服务端响应请求，下发证书和随机数
     * 客户端生成随机数，使用公钥加密发送服务端
     * 服务端给予响应
     * 经过四次握手后，双方在80端口进行对称加密通信
     */
}
