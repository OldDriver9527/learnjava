package org.olddriver.learndatastructure;

/**
 * 20200924
 * part 3
 */
public class StackAndQueue {
    /*
     * 栈stack，队列queue
     * 栈和队列是特殊的线性表
     *
     * 栈
     * 仅在一端进行插入，删除操作的线性表，通常在表尾操作。称为后进先出的线性表，简称LIFO结构
     * 表尾称为栈顶(top)，表头称为栈底(base)
     * 插入元素到栈顶，称为入栈(push)；删除栈顶元素，称为出栈(pop)
     * 栈的顺序存储结构称为顺序栈，使用一组连续存储单元依次存放从栈底至栈顶的数据元素
     * 栈的链式存储结构称为链栈
     * 栈与线性表仅运算规则不同
     *
     * 队列
     * 在一端进行插入，另一端进行删除的线性表，一般头删尾插。称为先进先出的线性表，简称FIFO结构
     * 表尾称为队尾，表头称为队头
     * 在队尾插入元素入队，在队头删除元素出队
     * 队列的顺序存储结构称为顺序队；队列的链式存储结构称为链队
     *
     * 栈的案例
     * 十进制转其他进制
     * 将十进制数与基数进行多次模运算，将结果存放在栈中；从栈中获取最终结果
     * 校验表达式中括号是否匹配
     * 对于左括号执行入栈操作，对于右括号执行出栈操作；出栈时将右括号与栈顶括号匹配，若匹配进行出栈；
     * 若栈已空但仍存在右括号或无右括号但栈仍存在元素，存在错误
     * 表达式运算
     *
     * 栈操作
     * 初始化栈
     * 销毁栈
     * 判断栈是否为空
     * 求栈长度
     * 取栈顶元素
     * 清空栈
     * 入栈
     * 出栈
     *
     * 顺序栈实现
     * 使用数组依次存放从栈底到栈顶的数据元素，top指针指向栈顶元素后的位置，base指针指向栈底元素，
     * stacksize变量存放栈的容量
     * 栈满仍插入元素称为上溢stackoverflow
     * 栈空仍移除元素称为下一underflow
     * 上溢是一种错误，下溢是一种结束标志
     *
     *
     *
     */
}
